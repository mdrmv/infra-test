name: Deploy Grafana

on:
  workflow_dispatch:
    inputs:
      host:
        description: 'Host to deploy'
        required: true
        default: 'dev_infra-droplet'
        type: choice
        options:
          - dev_infra-droplet
          - production-infra

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Set deployment variables
        id: vars
        run: |
          if [[ "${{ github.event.inputs.host }}" == "dev_infra-droplet" ]]; then
            echo "VPS_HOST=${{ secrets.VPS_HOST }}" >> $GITHUB_ENV
            echo "VPS_PORT=${{ secrets.VPS_SSH_PORT }}" >> $GITHUB_ENV
            echo "VPS_USERNAME=${{ secrets.VPS_USERNAME }}" >> $GITHUB_ENV
            echo "VPS_SSH_KEY=${{ secrets.VPS_SSH_KEY }}" >> $GITHUB_ENV
            echo "GRAFANA_VERSION=11.1.1" >> $GITHUB_ENV
          elif [[ "${{ github.event.inputs.host }}" == "production-infra" ]]; then
            echo "VPS_HOST=${{ secrets.VPS_HOST_PROD_INFRA }}" >> $GITHUB_ENV
            echo "VPS_PORT=${{ secrets.VPS_SSH_PORT_PROD }}" >> $GITHUB_ENV
            echo "VPS_USERNAME=${{ secrets.VPS_USERNAME_PROD_INFRA }}" >> $GITHUB_ENV
            echo "VPS_SSH_KEY=${{ secrets.VPS_SSH_KEY_PROD_INFRA }}" >> $GITHUB_ENV
            echo "GRAFANA_VERSION=11.3.0" >> $GITHUB_ENV
          fi
        
      - name: Deploy Grafana
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.VPS_HOST }}
          port: ${{ env.VPS_PORT }}
          username: ${{ env.VPS_USERNAME }}
          key: ${{ env.VPS_SSH_KEY }}
          script: |
            docker stop grafana || true
            docker rm grafana || true
            docker pull grafana/grafana:${{ env.GRAFANA_VERSION }}
            docker run -d --restart=unless-stopped \
              -v /var/lib/grafana:/var/lib/grafana \
              --name grafana \
              --net ngdem \
              -p 3000:3000 \
              grafana/grafana:${{ env.GRAFANA_VERSION }}

  healthcheck:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Run Healthcheck
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.VPS_HOST }}
          port: ${{ env.VPS_PORT }}
          username: ${{ env.VPS_USERNAME }}
          key: ${{ env.VPS_SSH_KEY }}
          script: |
            retries=5
            delay_seconds=10

            for attempt in $(seq "$retries"); do
              http_status=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:3000/api/health)
              
              if [ "$http_status" -eq 200 ]; then
                echo "The service has been successfully raised"
                exit 0
              else
                echo "Healthcheck failed (attempt $attempt/$retries), HTTP status: $http_status"
              fi

              if [ "$attempt" -lt "$retries" ]; then
                sleep "$delay_seconds"
              fi
            done

            echo "Grafana service failed healthcheck after $retries attempts."
            exit 1
