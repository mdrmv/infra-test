name: Deploy Grafana on the monitoring-vps

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Stop and remove old Grafana container and Deploy Grafana container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.VPS_USERNAME }}
          password: ${{ secrets.VPS_PASSWORD }}
          script: |
            docker stop grafana || true
            docker rm grafana || true
            docker pull grafana/grafana
            docker run -d -v /var/lib/grafana:/var/lib/grafana --name grafana --net ngdem -p 3000:3000 grafana/grafana

  healthcheck:
    needs: [deploy]   
    runs-on: ubuntu-latest   
    outputs:   
      id: healthcheck_output   
    steps:   
      - name: Run Healthcheck
        id: healthcheck_status 
        uses: appleboy/ssh-action@master   
        with:   
          host: ${{ secrets.VPS_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.VPS_USERNAME }}
          password: ${{ secrets.VPS_PASSWORD }}   
          script: |
            retries=3
            delay_seconds=20

            for attempt in $(seq "$retries"); do
            http_status=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:3000/api/health)
              
              if [ "$http_status" -eq 200 ]; then
                echo "The service has been successfully raised"
                echo "status=success" >> "$GITHUB_ENV"
                exit 0
              else
                echo "Error: Service not available (attempt $attempt/$retries)"
              fi

              if [ "$attempt" -lt "$retries" ]; then
                sleep "$delay_seconds"
              fi
            done

            echo "Failed to start new container."
            echo "status=failure" >> "$GITHUB_ENV"
            exit 1