name: Deploy Promtail Production

on:
    workflow_dispatch:
      inputs:
        host:
          description: 'Host to deploy'
          required: true
          default: 'production-infra'
          type: choice
          options:
            - production-frontend
            - production-backend
            - production-infra

jobs:
  deploy-on-the-production-frontend:
    if: github.event.inputs.host == 'production-frontend'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Copy promtail configuration
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.VPS_HOST_FRONT }}
          username: ${{ secrets.VPS_USERNAME_FRONT }}
          key: ${{ secrets.VPS_SSH_KEY_FRONT }}
          source: "./promtail-config.production-frontend.yml"
          target: "/home/${{ secrets.VPS_USERNAME_FRONT }}/promtail/"

      - name: Deploy and verify promtail
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST_FRONT }}
          username: ${{ secrets.VPS_USERNAME_FRONT }}
          key: ${{ secrets.VPS_SSH_KEY_FRONT }}
          script: |
            docker stop promtail || true
            docker rm promtail || true
            docker pull grafana/promtail:latest
            docker run -d --restart=unless-stopped --name promtail --network ngdem --volume /home/${{ secrets.VPS_USERNAME_FRONT }}/promtail/promtail-config.production-frontend.yml:/etc/promtail/config.yml \
                --volume /var/run/docker.sock:/var/run/docker.sock grafana/promtail:latest \
                -config.file=/etc/promtail/config.yml

            sleep 10
            if docker ps --filter "name=promtail" --filter "status=running" | grep -q "promtail"; then
              echo "promtail is running"
            else
              echo "promtail is not running"
              exit 1
            fi

  deploy-on-the-production-backend:
    if: github.event.inputs.host == 'production-backend'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Copy promtail configuration
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.VPS_HOST_BACK }}
          username: ${{ secrets.VPS_USERNAME_BACK }}
          key: ${{ secrets.VPS_SSH_KEY_BACK }}
          source: "./promtail-config.production-backend.yml"
          target: "/home/${{ secrets.VPS_USERNAME_BACK }}/promtail/"

      - name: Deploy and verify promtail
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST_BACK }}
          username: ${{ secrets.VPS_USERNAME_BACK }}
          key: ${{ secrets.VPS_SSH_KEY_BACK }}
          script: |
            docker stop promtail || true
            docker rm promtail || true
            docker pull grafana/promtail:latest
            docker run -d --restart=unless-stopped --name promtail --volume /home/${{ secrets.VPS_USERNAME_BACK }}/promtail/promtail-config.production-backend.yml:/etc/promtail/config.yml \
                --volume /var/run/docker.sock:/var/run/docker.sock grafana/promtail:latest \
                -config.file=/etc/promtail/config.yml

            sleep 10
            if docker ps --filter "name=promtail" --filter "status=running" | grep -q "promtail"; then
              echo "promtail is running"
            else
              echo "promtail is not running"
              exit 1
            fi

  deploy-on-the-production-infra:
    if: github.event.inputs.host == 'production-infra'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Copy promtail configuration
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.VPS_HOST_INFRA }}
          username: ${{ secrets.VPS_USERNAME_INFRA }}
          key: ${{ secrets.VPS_SSH_KEY_INFRA }}
          source: "./promtail-config.production-infra.yml"
          target: "/home/${{ secrets.VPS_USERNAME_INFRA }}/promtail/"

      - name: Deploy and verify promtail
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST_INFRA }}
          username: ${{ secrets.VPS_USERNAME_INFRA }}
          key: ${{ secrets.VPS_SSH_KEY_INFRA }}
          script: |
            docker stop promtail || true
            docker rm promtail || true
            docker pull grafana/promtail:latest
            docker run -d --name promtail --volume /home/${{ secrets.VPS_USERNAME_INFRA }}/promtail/promtail-config.production-infra.yml:/etc/promtail/config.yml \
                --volume /var/run/docker.sock:/var/run/docker.sock grafana/promtail:latest \
                -config.file=/etc/promtail/config.yml

            sleep 10
            if docker ps --filter "name=promtail" --filter "status=running" | grep -q "promtail"; then
              echo "promtail is running"
            else
              echo "promtail is not running"
              exit 1
            fi