name: Database Backup and Cleanup

on:
  schedule:
    - cron: '0 3 * * *'  # Launches everyday at 3am UTC

jobs:
  backup-internal:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run backup script via SSH for internal DB
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.VPS_USERNAME }}
          password: ${{ secrets.VPS_PASSWORD }}
          script: |
            DATABASES=("defaultdb" "admin-ms" "client-ms" "notification-ms" "user-ms")
            BACKUP_PATH="/mnt/io-db-backups/internal-db/"
            
            for DB in "${DATABASES[@]}"
            do
              echo "Starting backup for $DB"
              PGPASSWORD="${{ secrets.DB_PASSWORD_INTERNAL }}" pg_dump -U ${{ secrets.DB_USER_INTERNAL }} -h ${{ secrets.DB_HOST_INTERNAL }} -p ${{ secrets.DB_PORT_INTERNAL }} $DB > "${BACKUP_PATH}/${DB}_backup_$(date +%Y-%m-%d).sql"
              
              if [ $? -eq 0 ]; then
                echo "Backup successful for $DB"
              else
                echo "Backup failed for $DB"
                exit 1
              fi
            done

      - name: Cleanup old backups in internal DB folder
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.VPS_USERNAME }}
          password: ${{ secrets.VPS_PASSWORD }}
          script: |
            find /mnt/io-db-backups/internal-db/ -type f -name '*.sql' -mtime +336 -exec rm {} \;

  backup-stage:
    runs-on: ubuntu-latest
    steps:
      - name: Run backup script via SSH for stage DB
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.VPS_USERNAME }}
          password: ${{ secrets.VPS_PASSWORD }}
          script: |
            DATABASES=("defaultdb" "admin-ms" "client-ms" "notification-ms" "user-ms")
            BACKUP_PATH="/mnt/io-db-backups/stage-db/"
            
            for DB in "${DATABASES[@]}"
            do
              echo "Starting backup for $DB"
              PGPASSWORD="${{ secrets.DB_PASSWORD_STAGE }}" pg_dump -U ${{ secrets.DB_USER_STAGE }} -h ${{ secrets.DB_HOST_STAGE }} -p ${{ secrets.DB_PORT_STAGE }} $DB > "${BACKUP_PATH}/${DB}_backup_$(date +%Y-%m-%d).sql"
              
              if [ $? -eq 0 ]; then
                echo "Backup successful for $DB"
              else
                echo "Backup failed for $DB"
                exit 1
              fi
            done

      - name: Cleanup old backups in stage DB folder
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.VPS_USERNAME }}
          password: ${{ secrets.VPS_PASSWORD }}
          script: |
            find /mnt/io-db-backups/stage-db/ -type f -name '*.sql' -mtime +336 -exec rm {} \;
