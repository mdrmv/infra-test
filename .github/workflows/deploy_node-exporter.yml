name: Deploy node_exporter

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy'
        required: true
        default: 'main'

jobs:
  deploy-monitoring:
    if: github.event.inputs.branch == 'main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.branch }}
          
      - name: Deploy node_exporter
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.VPS_USERNAME }}
          password: ${{ secrets.VPS_PASSWORD }}
          script: |
            docker stop node_exporter || true
            docker rm node_exporter || true
            docker pull prom/node-exporter
            docker run -d --net="host" --pid="host" \
              -v "/:/host:ro,rslave" \
              --name node_exporter \
              --health-cmd="curl --fail http://localhost:9100/metrics || exit 1" \
              --health-interval=30s \
              --health-timeout=10s \
              --health-retries=3 \
              prom/node-exporter --path.rootfs=/host


  deploy-internal:
    if: github.event.inputs.branch == 'internal'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.branch }}
          
      - name: Deploy node_exporter
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST_INTERNAL }}
          username: ${{ secrets.VPS_USERNAME_INTERNAL }}
          password: ${{ secrets.VPS_PASSWORD_INTERNAL }}
          script: |
            docker stop node_exporter || true
            docker rm node_exporter || true
            docker pull prom/node-exporter
            docker run -d --net="host" --pid="host" \
              -v "/:/host:ro,rslave" \
              --name node_exporter \
              prom/node-exporter --path.rootfs=/host

  deploy-stage:
    if: github.event.inputs.branch == 'stage'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.branch }}
          
      - name: Deploy node_exporter
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST_STAGE }}
          username: ${{ secrets.VPS_USERNAME_STAGE }}
          password: ${{ secrets.VPS_PASSWORD_STAGE }}
          script: |
            docker stop node_exporter || true
            docker rm node_exporter || true
            docker pull prom/node-exporter
            docker run -d --net="host" --pid="host" \
              -v "/:/host:ro,rslave" \
              --name node_exporter \
              prom/node-exporter --path.rootfs=/host
