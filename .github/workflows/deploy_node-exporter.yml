name: Deploy node_exporter

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy'
        required: true
        default: 'main'

jobs:
  deploy-node-exporter:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Set environment variables
        run: |
          BRANCH="${{ github.event.inputs.branch }}"
          if [ "$BRANCH" = "monitoring" ]; then
            echo "VPS_HOST=${{ secrets.VPS_HOST }}" >> $GITHUB_ENV
            echo "SSH_PORT=${{ secrets.SSH_PORT }}" >> $GITHUB_ENV
            echo "VPS_USERNAME=${{ secrets.VPS_USERNAME }}" >> $GITHUB_ENV
            echo "VPS_PASSWORD=${{ secrets.VPS_PASSWORD }}" >> $GITHUB_ENV
          elif [ "$BRANCH" = "internal" ]; then
            echo "VPS_HOST=${{ secrets.VPS_HOST_INTERNAL }}" >> $GITHUB_ENV
            echo "SSH_PORT=${{ secrets.SSH_PORT_INTERNAL }}" >> $GITHUB_ENV
            echo "VPS_USERNAME=${{ secrets.VPS_USERNAME_INTERNAL }}" >> $GITHUB_ENV
            echo "VPS_PASSWORD=${{ secrets.VPS_PASSWORD_INTERNAL }}" >> $GITHUB_ENV
          elif [ "$BRANCH" = "stage" ]; then
            echo "VPS_HOST=${{ secrets.VPS_HOST_STAGE }}" >> $GITHUB_ENV
            echo "SSH_PORT=${{ secrets.SSH_PORT_STAGE }}" >> $GITHUB_ENV
            echo "VPS_USERNAME=${{ secrets.VPS_USERNAME_STAGE }}" >> $GITHUB_ENV
            echo "VPS_PASSWORD=${{ secrets.VPS_PASSWORD_STAGE }}" >> $GITHUB_ENV
          else
            echo "Branch not recognized, deployment skipped."
            exit 1
          fi

      - name: Deploy node_exporter
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.VPS_HOST }}
          port: ${{ env.SSH_PORT }}
          username: ${{ env.VPS_USERNAME }}
          password: ${{ env.VPS_PASSWORD }}
          script: |
            docker stop node_exporter || true
            docker rm node_exporter || true
            docker pull prom/node-exporter
            docker run -d --net="host" --pid="host" \
              -v "/:/host:ro,rslave" \
              --name node_exporter \
              prom/node-exporter --path.rootfs=/host
