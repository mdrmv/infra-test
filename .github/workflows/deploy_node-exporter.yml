name: Deploy Node_exporter

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy'
        required: true
        default: 'main'
        type: choice
        options:
          - main
          - internal
          - stage

jobs:
  deploy-on-the-monitoring-vps:
    if: github.event.inputs.branch == 'main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: main
          
      - name: Deploy and verify node_exporter
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            docker stop node_exporter || true
            docker rm node_exporter || true
            docker pull prom/node-exporter
            docker run -d --restart=unless-stopped --net="host" --pid="host" \
              -v "/:/host:ro,rslave" \
              --name node_exporter \
              prom/node-exporter --path.rootfs=/host \
              --no-collector.arp              

            sleep 10
            if docker ps --filter "name=node_exporter" --filter "status=running" | grep -q "node_exporter"; then
              echo "node_exporter is running"
            else
              echo "node_exporter is not running"
              exit 1
            fi


  deploy-on-the-internal-droplet:
    if: github.event.inputs.branch == 'internal'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: main
          
      - name: Deploy and verify node_exporter
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST_INTERNAL }}
          username: ${{ secrets.VPS_USERNAME_INTERNAL }}
          key: ${{ secrets.VPS_SSH_KEY_INTERNAL }}
          script: |
            docker stop node_exporter || true
            docker rm node_exporter || true
            docker pull prom/node-exporter
            docker run -d --restart=unless-stopped --net="host" --pid="host" \
              -v "/:/host:ro,rslave" \
              --name node_exporter \
              prom/node-exporter --path.rootfs=/host \
              --no-collector.arp

            sleep 10
            if docker ps --filter "name=node_exporter" --filter "status=running" | grep -q "node_exporter"; then
              echo "node_exporter is running"
            else
              echo "node_exporter is not running"
              exit 1
            fi

  deploy-on-the-tage-droplet:
    if: github.event.inputs.branch == 'stage'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: main
          
      - name: Deploy and verify node_exporter
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST_STAGE }}
          username: ${{ secrets.VPS_USERNAME_STAGE }}
          key: ${{ secrets.VPS_SSH_KEY_STAGE }}
          script: |
            docker stop node_exporter || true
            docker rm node_exporter || true
            docker pull prom/node-exporter
            docker run -d --restart=unless-stopped --net="host" --pid="host" \
              -v "/:/host:ro,rslave" \
              --name node_exporter \
              prom/node-exporter --path.rootfs=/host \
              --no-collector.arp

            sleep 10
            if docker ps --filter "name=node_exporter" --filter "status=running" | grep -q "node_exporter"; then
              echo "node_exporter is running"
            else
              echo "node_exporter is not running"
              exit 1
            fi