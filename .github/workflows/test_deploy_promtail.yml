name: Deploy Promtail

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy'
        required: true
        default: 'main'
        type: choice
        options:
          - main
          - internal
          - stage

jobs:
  deploy-on-the-monitoring-vps:
    if: github.event.inputs.branch == 'main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Copy promtail configuration
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.VPS_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.VPS_USERNAME }}
          password: ${{ secrets.VPS_PASSWORD }}
          source: "./monitoring-promtail-config.yml"
          target: "/home/${{ secrets.VPS_USERNAME }}/promtail/"

      - name: Deploy and verify promtail
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.VPS_USERNAME }}
          password: ${{ secrets.VPS_PASSWORD }}
          script: |
            docker stop promtail || true
            docker rm promtail || true
            docker pull grafana/promtail:latest
            docker run -d --name promtail --volume /home/${{ secrets.VPS_USERNAME }}/promtail/monitoring-promtail-config.yml:/etc/promtail/config.yml --volume /var/run/docker.sock:/var/run/docker.sock grafana/promtail:latest -config.file=/etc/promtail/config.yml

            sleep 10
            if docker ps --filter "name=promtail" --filter "status=running" | grep -q "promtail"; then
              echo "promtail is running"
            else
              echo "promtail is not running"
              exit 1
            fi

  deploy-on-the-internal-droplet:
    if: github.event.inputs.branch == 'internal'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Copy promtail configuration
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.VPS_HOST_INTERNAL }}
          username: ${{ secrets.VPS_USERNAME_INTERNAL }}
          password: ${{ secrets.VPS_PASSWORD_INTERNAL }}
          source: "./internal-promtail-config.yml"
          target: "/home/${{ secrets.VPS_USERNAME_INTERNAL }}/promtail/"

      - name: Deploy and verify promtail
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST_INTERNAL }}
          username: ${{ secrets.VPS_USERNAME_INTERNAL }}
          password: ${{ secrets.VPS_PASSWORD_INTERNAL }}
          script: |
            docker stop promtail || true
            docker rm promtail || true
            docker pull grafana/promtail:latest
            docker run -d --name promtail --volume /home/${{ secrets.VPS_USERNAME_INTERNAL }}/promtail/internal-promtail-config.yml:/etc/promtail/config.yml --volume /var/run/docker.sock:/var/run/docker.sock grafana/promtail:latest -config.file=/etc/promtail/config.yml

            sleep 10
            if docker ps --filter "name=promtail" --filter "status=running" | grep -q "promtail"; then
              echo "promtail is running"
            else
              echo "promtail is not running"
              exit 1
            fi

  deploy-on-the-stage-droplet:
    if: github.event.inputs.branch == 'stage'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Copy promtail configuration
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.VPS_HOST_STAGE }}
          username: ${{ secrets.VPS_USERNAME_STAGE }}
          password: ${{ secrets.VPS_PASSWORD_STAGE }}
          source: "./stage-promtail-config.yml"
          target: "/home/${{ secrets.VPS_USERNAME_STAGE }}/promtail/"

      - name: Deploy and verify promtail
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST_STAGE }}
          username: ${{ secrets.VPS_USERNAME_STAGE }}
          password: ${{ secrets.VPS_PASSWORD_STAGE }}
          script: |
            docker stop promtail || true
            docker rm promtail || true
            docker pull grafana/promtail:latest
            docker run -d --name promtail --volume /home/${{ secrets.VPS_USERNAME_INTERNAL }}/promtail/stage-promtail-config.yml:/etc/promtail/config.yml --volume /var/run/docker.sock:/var/run/docker.sock grafana/promtail:latest -config.file=/etc/promtail/config.yml

            sleep 10
            if docker ps --filter "name=promtail" --filter "status=running" | grep -q "promtail"; then
              echo "promtail is running"
            else
              echo "promtail is not running"
              exit 1
            fi
